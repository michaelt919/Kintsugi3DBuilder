package openGL.wrappers.interfaces;
public interface ReadableFramebuffer extends Framebuffer 
{

	byte[] readRGBPixelsAsBytes(int mode);

	byte[] readRGBAPixelsAsBytes(int mode);

	byte[] readRedPixelsAsBytes(int mode);

	byte[] readGreenPixelsAsBytes(int mode);

	byte[] readBluePixelsAsBytes(int mode);

	byte[] readDepthPixelsAsBytes();

	byte[] readStencilPixelsAsBytes();

	short[] readRGBPixelsAsShorts(int mode);

	short[] readRGBAPixelsAsShorts(int mode);

	short[] readRedPixelsAsShorts(int mode);

	short[] readGreenPixelsAsShorts(int mode);

	short[] readBluePixelsAsShorts(int mode);

	short[] readDepthPixelsAsShorts();

	short[] readStencilPixelsAsShorts();

	int[] readRGBPixelsAsInts(int mode);

	int[] readRGBAPixelsAsInts(int mode);

	int[] readRedPixelsAsInts(int mode);

	int[] readGreenPixelsAsInts(int mode);

	int[] readBluePixelsAsInts(int mode);

	int[] readDepthPixelsAsInts(int mode);

	int[] readStencilPixelsAsInts(int mode);

	float[] readRGBPixelsAsFloats(int mode);

	float[] readRGBAPixelsAsFloats(int mode);

	float[] readRedPixelsAsFloats(int mode);

	float[] readGreenPixelsAsFloats(int mode);

	float[] readBluePixelsAsFloats(int mode);

	float[] readDepthPixelsAsFloats();

	float[] readStencilPixelsAsFloats();

	int[] readRGBAPixelsAsPackedInts(int mode);

}
