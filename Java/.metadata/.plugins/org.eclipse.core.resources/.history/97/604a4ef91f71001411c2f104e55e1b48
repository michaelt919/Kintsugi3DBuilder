import static org.lwjgl.opengl.GL11.*;

import java.util.EmptyStackException;

public class OpenGLHelper 
{
	public static void openGLErrorCheck()
	{
		int error = glGetError();
		switch (error)
		{
		case GL_NO_ERROR: return;
		case GL_INVALID_ENUM: throw new IllegalArgumentException("Invalid OpenGL enumerated argument.");
		case GL_INVALID_VALUE: throw new IllegalArgumentException("A numeric OpenGL argument is out of range.");
		case GL_INVALID_OPERATION: throw new UnsupportedOperationException("The specified operation is not allowed in the current OpenGL state.");
		case GL_OUT_OF_MEMORY: throw new OutOfMemoryError("There is not enough GPU memory left to execute the specified OpenGL command.");
		case GL_STACK_UNDERFLOW: throw new EmptyStackException("An attempt has been made to perform an OpenGL operation that would cause an internal stack to underflow.");
		case GL_STACK_OVERFLOW: throw new StackOverflowError("An attempt has been made to perform an OpenGL operation that would cause an internal stack to underflow.");
		}
	}
}
