public interface Framebuffer {

	int getViewportX();

	int getViewportY();

	int getViewportWidth();

	int getViewportHeight();

	void setViewport(int x, int y, int width, int height);

	void bindForDraw();

	void bindForRead();

	void delete();

	byte[] readRGBPixelsAsBytes();

	byte[] readRGBAPixelsAsBytes();

	byte[] readRedPixelsAsBytes();

	byte[] readGreenPixelsAsBytes();

	byte[] readBluePixelsAsBytes();

	byte[] readDepthPixelsAsBytes();

	byte[] readStencilPixelsAsBytes();

	short[] readRGBPixelsAsShorts();

	short[] readRGBAPixelsAsShorts();

	short[] readRedPixelsAsShorts();

	short[] readGreenPixelsAsShorts();

	short[] readBluePixelsAsShorts();

	short[] readDepthPixelsAsShorts();

	short[] readStencilPixelsAsShorts();

	int[] readRGBPixelsAsInts();

	int[] readRGBAPixelsAsInts();

	int[] readRedPixelsAsInts();

	int[] readGreenPixelsAsInts();

	int[] readBluePixelsAsInts();

	int[] readDepthPixelsAsInts();

	int[] readStencilPixelsAsInts();

	float[] readRGBPixelsAsFloats();

	float[] readRGBAPixelsAsFloats();

	float[] readRedPixelsAsFloats();

	float[] readGreenPixelsAsFloats();

	float[] readBluePixelsAsFloats();

	float[] readDepthPixelsAsFloats();

	float[] readStencilPixelsAsFloats();

	int[] readRGBAPixelsAsPackedInts();

}